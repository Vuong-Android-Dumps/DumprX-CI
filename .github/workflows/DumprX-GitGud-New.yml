name: DumprX GitGud New
 
on:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: "Direct Link of the ROM/Firmware to Dump"
        required: true
      EXTRA_CMD:
        description: "Any Extra Command to Run Before Dump"
        required: false

defaults:
  run:
    shell: bash

env:
  # ROM
  ROM_URL: ${{ github.event.inputs.ROM_URL }}

  # Gitlab
  PUSH_TO_GITLAB: true

  # Extra Command
  EXTRA_CMD: ${{ github.event.inputs.EXTRA_CMD }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
       - name: Maximize build space
         uses: easimon/maximize-build-space@master
         with:
              root-reserve-mb: 512
              temp-reserve-mb: 100
              swap-size-mb: 1024
              remove-dotnet: 'true'
              remove-android: 'true'
              remove-haskell: 'true'
              remove-codeql: 'true'
              remove-docker-images: 'true'
          
       - name: Checkouts
         uses: actions/checkout@v4

       - name: Clone Our Firmware Dumper
         working-directory: ${{ github.workspace }}
         run: |
              git clone https://github.com/Vuong-Android-Dumps/DumprX-Script.git DumprX

       - name: Setup Config envs
         working-directory: ${{ github.workspace }}/DumprX
         run: |  
              mkdir -p ~/.ssh
              ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
              ssh-keyscan -t rsa gitgud.io >> ~/.ssh/known_hosts
              echo "${{ secrets.PRIV_SSH_KEY }}" > ~/.ssh/id_rsa
              chmod 600 ~/.ssh/id_rsa
              echo "${{ secrets.GITGUD_TOKEN }}" > .gitlab_token
              echo "Van-Firmware-Dumps" > .gitlab_group
              echo "gitgud.io" > .gitlab_instance
              echo "${{ secrets.TG_TOKEN }}" > .tg_token
              echo "@VanFirmwareDumps" > .tg_chat

       - name: Setup DumprX's Environment
         working-directory: ${{ github.workspace }}/DumprX
         run: |
              git config --global user.name "VanVuong41429"
              git config --global user.email "vanvuong41429@gmail.com"
              sudo bash setup.sh

       - name: Run the Extra Command
         working-directory: ${{ github.workspace }}/DumprX
         run: |
              $EXTRA_CMD
              curl -L -o "SM-M176B_1_20251006143311_mhxisfx205_fac.zip.enc4" -J -H 'Authorization: FUS nonce="oNPQVoUVuHvYW+3b4/oWhisDxPAwsaPKOsLHsbPPks8=", signature="va/AchiUdV9Ah5UtM2PrR/4wDv2doCBDUfgOv2/rqu8=", nc="", type="", realm="", newauth="1"' -H 'User-Agent: Kies2.0_FUS' "http://cloud-neofussvr.samsungmobile.com/NF_DownloadBinaryForMass.do?file=/neofus/910/SM-M176B_1_20251006143311_mhxisfx205_fac.zip.enc4"
              openssl enc -d -aes-128-ecb -in SM-M176B_1_20251006143311_mhxisfx205_fac.zip.enc4 -out SM-M176B_1_20251006143311_mhxisfx205_fac.zip -K edc21377cfbb455805052cfc6a8ca7c1
              rm SM-M176B_1_20251006143311_mhxisfx205_fac.zip.enc4

       - name: Start Dumping
         working-directory: ${{ github.workspace }}/DumprX
         run: |
              ./dumper.sh "$ROM_URL"
